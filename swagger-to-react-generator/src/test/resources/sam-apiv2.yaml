swagger: "2.0"
info:
  description: >
    API for management of the mapping of BSCS GL accounts to SAP. The methods
    provided give access to the following entietis of data model:

    - Account (mapping BSCS GL number to SAP OFI numbers)

    - Order (Number for BSCS GL account per customer segment)

    - Segment (dictionary)

    - Account BSCS numbers (dictionary)

    - Account SAP numbers (dictionary)


    The versioned enties like Account or Order may be processed only in status W
    like Working. They may be confimed and moved to status C like Confirmed.
    After that they can be release to status P like Production. Movement from
    status C to P is a final one in the lifecycle of the account/order mapping.
    The set of accounts and order released to production can not be modified. It
    can be only read.


    Contrary to that, operations on the dictionary tables are bulk ones. I is
    possible to clean the whole configuarion and reload it bu not to manipulate
    on single entries. Bulk delete is to be granted to the Admin role only. The
    Account and Order entities may be modifid in record by record mode using
    primary key access but only for status W like Work and release 0.


    The release attribute is 0 for the entities in status W like Work and is
    bigger than 0 for released ones. The api provides key word last for reading
    the latest release so that it can be processed being stored in status W like
    Work.


    The release entries are to be validated agains existing versions. For
    example valid data must be:

    - in the future from the release date

    - rounded to 1st day of the month (in the future)

    - can not everlap with valid date of any prevously released version


    The access rights to API methods, entities and their propertis is besed on
    the users role being:

    - Booker (may create Acconts and fill up most of the values)

    - Control (may create Order linked to existing Account and update the
    attribute orderNumber, may do relese, may do promotion of status from W like
    Working to C like Controlled)

    - Admin (may do everything, especially purge dictionaries and load them)


    The API currently provides 21 business methods and 2 system methods.
  version: 1.0.0
  title: Swagger gosamapi
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: norbert.bondarczuk@wipro.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
basePath: /api
host: 'localhost:8000'
tags:
  - name: system
    description: Operation returning general info about system
  - name: user
    description: Operations on the user session
  - name: account
    description: Operations on the account mappings from BSCS to SAP
  - name: order
    description: Operations on order numbers per BSCS account
  - name: dictionary-account-bscs
    description: >-
      Operations on the dictionary of BSSC GL account numbers available for
      mapping
  - name: dictionary-account-sap
    description: >-
      Operations on the dictionary of SAP OFI account numbers available for
      mapping
  - name: dictionary-segment
    description: Operations on the dictionary of customer segments
schemes:
  - http

securityDefinitions:
  BearerAuth:
    type: basic

paths:
  /system/version:
    get:
      tags:
        - system
      summary: Provides basic system version info
      description: >-
        Enables health check of the service. Makes system observable. Serves like a ping request showing that system is alive.
      operationId: systemVersion
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetVersion'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /system/status:
    get:
      tags:
        - system
      summary: Provides process statistics
      description: >-
        Enables health check of the service. Makes debugging and operations easy.
      operationId: systemStatus
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetStatus'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'

  /user/login:
    post:
      tags:
        - user
      summary: Logs an user into the system and produces a JWT token
      description: >-
        Creates user session and produces authorization token. It validates LDAP
        profile. Requires user id, role id and domain passowrd. This profile is
        to be validated with domain service. It will be encoded in thee claims
        of the JWT token produced by the service. The token has to be used in
        each subsequent method invocation in header Authorization item with
        authorization type Bearer.
      operationId: loginUser
      produces:
        - application/json
      parameters:
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
        - in: body
          name: body
          description: User login payload
          required: true
          schema:
            $ref: '#/definitions/RequestSetUserLogin'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetUserLogin'
          headers:
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /user/logoff:
    post:
      tags:
        - user
      summary: Logs an user off
      description: >-
        Logs off current logged in user session. The invalidation of the token
        is based on the explicit storing of the invalid tokens in REDIS backend
        cache.
      operationId: logoffUser
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
        - in: body
          name: body
          description: User logoff payload
          required: true
          schema:
            $ref: '#/definitions/RequestSetUserLogoff'
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetOk'
        '400':
          description: Invalid username supplied
          schema:
            $ref: '#/definitions/ResultSetError'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /account:
    post:
      tags:
        - account
      summary: Creates an account
      description: >-
        A new mapping is created in W like Working status. Attempts to create
        item in any other status will be errored out.


        Requires:

        - Booker role.
      operationId: createAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
        - in: body
          name: body
          description: Creation of object Account
          required: true
          schema:
            $ref: '#/definitions/RequestSetAccount'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetAccount'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    delete:
      tags:
        - account
      summary: Deletes all accounts
      description: >-
        Unselective purge of the table. Used before bulk load.


        Requires:

        - Admin role.
      operationId: deleteAccountsAll
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetCount'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  '/account/{status}/{release}':
    get:
      tags:
        - account
      summary: Reads some accounts
      description: >-
        A set of accouts is read and returned. The criteria is per status and
        version. The varsion must be known a priori. For work version release is
        always 0.
      operationId: readAccountByStatusRelease
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
        - name: status
          in: path
          description: 'status of the package, W for workm P for production'
          required: true
          type: string
          enum:
            - W
            - C
            - P
        - name: release
          in: path
          description: 'release sequential number, 0 for work, else production'
          required: true
          type: string
          enum:
            - 0
            - last
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetAccounts'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  '/account/{status}/{release}/{bscsAccount}':
    put:
      tags:
        - account
      summary: Updates an account
      description: >-
        Most selective access to single row. The primary key is used. One record
        is returnd. The status and release must be given a priori. Promotion
        from status value W like Working to C like Controlled may be done only
        with Controll role.


        Requires:

        - Booker role while in W like Work,

        - Control role while in C like Control state and in transition from W like Work to C like Control.
      operationId: updateAccount
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
        - name: status
          in: path
          description: 'status of the package, W for workm P for production'
          required: true
          type: string
          enum:
            - W
            - C
            - P
        - name: release
          in: path
          description: >-
            release sequential number, 0 for work, else production or last for
            latst version
          required: true
          type: string
          enum:
            - 0
            - last
        - name: bscsAccount
          in: path
          description: BSCS account code
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetAccounts'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    delete:
      tags:
        - account
      summary: Deletes an account
      description: >-
        Most selective access to single row. The primary key is used. One record
        is returnd. The status and release must be given a priori. Only records
        in W like Working status may be manipulatd this way. Only records in W
        like Working status may be manipulatd this way.


        Requires:

        - Booker role.
      operationId: deleteAccount
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
        - name: status
          in: path
          description: 'status of the package, W for work P for production'
          required: true
          type: string
          enum:
            - W
            - C
            - P
        - name: release
          in: path
          description: 'release sequential number, 0 for work, else production or last'
          required: true
          type: string
          enum:
            - 0
            - last
        - name: bscsAccount
          in: path
          description: BSCS account number
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetCount'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /account/release:
    post:
      tags:
        - account
      summary: Releases account, orders changing the status
      description: >-
        Does a release of version in state C like Controlled to P like Production. The
        impact is on Account and Order entries. Existence of not controled
        entries with status W like Working causes failure. Other validation rules
        are applied as well, for example valid date check: it must be rounded
        down and in the future and no clash with entries in status P like
        Production found in Account or Order backednd tables.


        Requires:

        - Control role.
      operationId: doRelease
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetOk'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /order:
    post:
      tags:
        - order
      summary: Creates an order
      description: >-
        A new mapping is created in working status, unconfirmed. The entries
        segment value must be validated with values from dictionary Segment.


        Requires:

        - Control role.
      operationId: createOrder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
        - in: body
          name: body
          description: Creation of object Order
          required: true
          schema:
            $ref: '#/definitions/RequestSetOrder'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetOrder'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    delete:
      tags:
        - order
      summary: Deletes all orders
      description: >-
        Unselective purge of the table. Used in bulk load.


        Requires:

        - Admin role.
      operationId: deleteOrdersAll
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetCount'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  '/order/{status}/{release}':
    get:
      tags:
        - order
      summary: Reads some orders
      description: >-
        Set of orders is read and returned. The criteria is per status and
        version. The varsion must be known a priori. For work version release is
        always 0.
      operationId: readOrderByStatusRelease
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
        - name: status
          in: path
          description: 'status of the package, W for workm P for production'
          required: true
          type: string
          enum:
            - W
            - C
            - P
        - name: release
          in: path
          description: 'release sequential number, 0 for work, else production'
          required: true
          type: string
          enum:
            - 0
            - last
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetOrders'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  '/order/{status}/{release}/{bscsAccount}/{segment}':
    put:
      tags:
        - order
      summary: Updates an order
      description: >-
        Most selective access to single row. The primary key is used. One record
        is returnd. The status and release must be given a priori. Only records
        in W like Working status may be manipulatd this way.
      operationId: updateOrder
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
        - name: status
          in: path
          description: 'status of the package, W for workm P for production'
          required: true
          type: string
          enum:
            - W
            - C
            - P
        - name: release
          in: path
          description: 'release sequential number, 0 for work, else production'
          required: true
          type: string
          enum:
            - 0
            - last
        - name: bscsAccount
          in: path
          description: 'release sequential number, 0 for work, else production'
          required: true
          type: string
        - name: segment
          in: path
          description: customer segment code
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetOrders'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    delete:
      tags:
        - order
      summary: Deletes an order
      description: >-
        Most selective access to single row. The primary key is used. One record
        is deleted. Only records in W like Working status may be manipulatd this
        way.


        Requires:

        - Control role.
      operationId: deleteOrder
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
        - name: status
          in: path
          description: 'status of the package, W for workm P for production'
          required: true
          type: string
          enum:
            - W
            - C
            - P
        - name: release
          in: path
          description: 'release sequential number, 0 for work, else production'
          required: true
          type: string
          enum:
            - 0
            - last
        - name: bscsAccount
          in: path
          description: 'release sequential number, 0 for work, else production'
          required: true
          type: string
        - name: segment
          in: path
          description: customer segment code
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetCount'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /dictionary/account/sap:
    post:
      tags:
        - dictionary-account-sap
      summary: Creates an account description
      description: >-
        Only one description is created in the configuration.


        Requires:

        - Admin role.
      operationId: createAccountDictSap
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
        - in: body
          name: body
          description: >-
            Structure of the objects to be create with all fields to be
            populated
          required: true
          schema:
            $ref: '#/definitions/RequestSetAccountDictSap'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetAccountDictSap'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    get:
      tags:
        - dictionary-account-sap
      summary: Reads all account descriptions
      description: The whole configuration is read from the backend.
      operationId: readAccountDictSap
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetAccountDictSaps'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    delete:
      tags:
        - dictionary-account-sap
      summary: Deletes all account descriptions
      description: >-
        Unselective cleanup of the configuration. Used in bulk load.


        Requires:

        - Admin role.
      operationId: deleteAccountDictSap
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetCount'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /dictionary/account/bscs:
    post:
      tags:
        - dictionary-account-bscs
      summary: Creates an account description
      description: >-
        Only one description is created in the configuration. Requires Admin
        role.
      operationId: createAccountDictBscs
      parameters:
        - in: body
          name: body
          description: >-
            Structure of the objects to be create with all fields to be
            populated
          required: true
          schema:
            $ref: '#/definitions/RequestSetAccountDictBscs'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetAccountDictBscs'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    get:
      tags:
        - dictionary-account-bscs
      summary: Reads all account descriptions
      description: The whole configuration is read from the backend.
      operationId: readAccountDictBscs
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetAccountDictBscss'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    delete:
      tags:
        - dictionary-account-bscs
      summary: Deletes all account descriptions
      description: >-
        Unselective cleanup of the configuration. Used in bulk load.


        Requires:

        - Admin role.
      operationId: deleteAccountDictBscs
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          format: uuid
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetCount'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /dictionary/segment:
    post:
      tags:
        - dictionary-segment
      summary: Creates new segment
      description: >-
        Only one segment is created in the configuration.


        Requires:

        - Admin role
      operationId: createSegment
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
        - in: body
          name: body
          description: >-
            Structure of the objects to be create with all fields to be
            populated.
          required: true
          schema:
            $ref: '#/definitions/RequestSetSegment'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetSegment'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    get:
      tags:
        - dictionary-segment
      summary: Reads all segments
      description: The whole configuration is read from the backend.
      operationId: readSegment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetSegments'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    delete:
      tags:
        - dictionary-segment
      summary: Deletes all segments
      description: >-
        Unselective cleanup of the configuration.


        Requires:

        - Admin role.
      operationId: deleteSegment
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: header
          name: X-Request-ID
          type: string
          format: uuid
          required: false
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetCount'
        '401':
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        '500':
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
definitions:
  ResultSetOk:
    type: object
    properties:
      status:
        type: string
        enum:
          - Ok
  ResultSetError:
    type: object
    properties:
      status:
        type: string
        enum:
          - Error
      message:
        type: string
  ResultSetCount:
    type: object
    properties:
      status:
        type: string
        enum:
          - Ok
      count:
        type: integer
  Segment:
    type: object
    properties:
      csTradefer:
        type: string
      csType:
        type: integer
  Segments:
    type: array
    items:
      $ref: '#/definitions/Segment'
  RequestSetSegment:
    type: object
    properties:
      data:
        $ref: '#/definitions/Segment'
  ResultSetSegment:
    type: object
    properties:
      status:
        type: string
        enum:
          - Ok
      data:
        $ref: '#/definitions/Segment'
  ResultSetSegments:
    type: object
    properties:
      status:
        type: string
        enum:
          - Ok
      count:
        type: integer
      data:
        $ref: '#/definitions/Segments'
  Account:
    type: object
    properties:
      releaseId:
        type: integer
      status:
        type: string
      bscsAccount:
        type: string
      ofiSapAccount:
        type: string
      validFromDate:
        type: string
        format: date
      vatCodeInd:
        type: string
      sapSegmText:
        type: string
      ofiSapWbsCode:
        type: string
      citMarkerVatFlag:
        type: integer
  Accounts:
    type: array
    items:
      $ref: '#/definitions/Account'
  RequestSetAccount:
    type: object
    properties:
      data:
        $ref: '#/definitions/Account'
  ResultSetAccounts:
    type: object
    properties:
      status:
        type: string
        enum:
          - Ok
      count:
        type: integer
      data:
        $ref: '#/definitions/Accounts'
  ResultSetAccount:
    type: object
    properties:
      status:
        type: string
        enum:
          - Ok
      data:
        $ref: '#/definitions/Account'
  Order:
    type: object
    properties:
      releaseId:
        type: integer
      status:
        type: string
      bscsAccount:
        type: string
      segmentCode:
        type: string
      orderNumber:
        type: string
      validFromDate:
        type: string
        format: date
  Orders:
    type: array
    items:
      $ref: '#/definitions/Order'
  RequestSetOrder:
    type: object
    properties:
      data:
        $ref: '#/definitions/Order'
  ResultSetOrder:
    type: object
    properties:
      status:
        type: string
        enum:
          - Ok
      data:
        $ref: '#/definitions/Order'
  ResultSetOrders:
    type: object
    properties:
      status:
        type: string
        enum:
          - Ok
      count:
        type: integer
      data:
        $ref: '#/definitions/Orders'
  RequestSetUserLogin:
    type: object
    properties:
      data:
        $ref: '#/definitions/UserLogin'
  ResultSetUserLogin:
    type: object
    properties:
      data:
        $ref: '#/definitions/UserLoginInfo'
  UserLogin:
    type: object
    properties:
      user:
        type: string
      role:
        type: string
        enum:
          - Booker
          - Control
          - Admin
      password:
        type: string
  UserLoginInfo:
    type: object
    properties:
      user:
        type: string
      role:
        type: string
        enum:
          - Booker
          - Control
          - Admin
      token:
        type: string
  RequestSetUserLogoff:
    type: object
    properties:
      data:
        $ref: '#/definitions/UserLogoff'
  UserLogoff:
    type: object
    properties:
      user:
        type: string
  AccountDictSap:
    type: object
    properties:
      sapOfiAccount:
        type: string
      name:
        type: string
      status:
        type: string
  AccountDictSaps:
    type: array
    items:
      $ref: '#/definitions/AccountDictSap'
  RequestSetAccountDictSap:
    type: object
    properties:
      data:
        $ref: '#/definitions/AccountDictSap'
  ResultSetAccountDictSap:
    type: object
    properties:
      status:
        type: string
        enum:
          - Ok
      data:
        $ref: '#/definitions/AccountDictSap'
  ResultSetAccountDictSaps:
    type: object
    properties:
      status:
        type: string
        enum:
          - Ok
      count:
        type: integer
      data:
        $ref: '#/definitions/AccountDictSaps'
  AccountDictBscs:
    type: object
    properties:
      glCode:
        type: string
      glDes:
        type: string
      glType:
        type: string
      glActive:
        type: string
  AccountDictBscss:
    type: array
    items:
      $ref: '#/definitions/AccountDictBscs'
  RequestSetAccountDictBscs:
    type: object
    properties:
      data:
        $ref: '#/definitions/AccountDictBscs'
  ResultSetAccountDictBscs:
    type: object
    properties:
      status:
        type: string
        enum:
          - Ok
      data:
        $ref: '#/definitions/AccountDictBscs'
  ResultSetAccountDictBscss:
    type: object
    properties:
      status:
        type: string
        enum:
          - Ok
      count:
        type: integer
      data:
        $ref: '#/definitions/AccountDictBscss'
  ResultSetVersion:
    type: object
    properties:
      status:
        type: string
        enum:
          - Ok
      version:
        type: string
  ResultSetStatus:
    type: object
    properties:
      status:
        type: string
        enum:
          - Ok
      memoryAlloc:
        type: integer
      memoryTotalAlloc:
        type: integer
      memorySys:
        type: integer
      memoryNMalloc:
        type: integer
      memoryNFree:
        type: integer
      processedRequests:
        type: integer
      processedRequestsErrors:
        type: integer
      processedRequestsOk:
        type: integer
      processingTimeTotalSec:
        type: number
        format: double
      runningSince:
        type: string
        format: data-time
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
