swagger: "2.0"
info:
  version: '1.0.0'
  title: Swagger gosamapi
  description: "API for management of the mapping of BSCS GL accounts to SAP. The methods provided give access to the following entietis of data model:\n- Account (mapping BSCS GL number to SAP OFI numbers)\n- Order (Number for BSCS GL account per customer segment)\n- Segment (dictionary)\n- Account BSCS numbers (dictionary)\n- Account SAP numbers (dictionary)\n\nThe versioned enties like Account or Order may be processed only in status W like Working. They may be confimed and moved to status C like Confirmed. After that they can be release to status P like Production. Movement from status C to P is a final one in the lifecycle of the account/order mapping. The set of accounts and order released to production can not be modified. It can be only read. \n\nContrary to that, operations on the dictionary tables are bulk ones. I is possible to clean the whole configuarion and reload it bu not to manipulate on single entries. Bulk delete is to be granted to the Admin role only. The Account and Order entities may be modifid in record by record mode using primary key access but only for status W like Work and release 0.\n\nThe release attribute is 0 for the entities in status W like Work and is bigger than 0 for released ones. The api provides key word last for reading the latest release so that it can be processed being stored in status W like Work.\n\nThe release entries are to be validated agains existing versions. For example valid data must be:\n- in the future from the release date\n- rounded to 1st day of the month (in the future)\n- can not everlap with valid date of any prevously released version\n\nThe access rights to API methods, entities and their propertis is besed on the users role being:\n- Booker (may create Acconts and fill up most of the values)\n- Control (may create Order linked to existing Account and update the attribute orderNumber, may do relese, may do promotion of status from W like Working to C like Controlled)\n- Admin (may do everything, especially purge dictionaries and load them)\n\nThe API currently provides 21 business methods and 2 system methods.\n"
  contact:
    email: norbert.bondarczuk@wipro.com
host: localhost:8000
basePath: /api
securityDefinitions: {}
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /system/version:
    get:
      description: Enables health check of the service. Makes system observable. Serves like a ping request showing that system is alive.
      summary: systemVersion
      tags:
        - system
      operationId: SystemVersionGet
      deprecated: false
      produces:
        - application/json
      parameters: []
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetVersion'
          headers: {}
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /system/status:
    get:
      description: Enables health check of the service. Makes debugging and operations easy.
      summary: systemStatus
      tags:
        - system
      operationId: SystemStatusGet
      deprecated: false
      produces:
        - application/json
      parameters: []
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetStatus'
          headers: {}
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /user/login:
    post:
      description: Creates user session and produces authorization token. It validates LDAP profile. Requires user id, role id and domain passowrd. This profile is to be validated with domain service. It will be encoded in thee claims of the JWT token produced by the service. The token has to be used in each subsequent method invocation in header Authorization item with authorization type Bearer.
      summary: loginUser
      tags:
        - user
      operationId: UserLoginPost
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
        - name: body
          in: body
          required: true
          description: User login payload
          schema:
            $ref: '#/definitions/RequestSetUserLogin'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetUserLogin'
          headers:
            X-Expires-After:
              type: string
        400:
          description: Invalid username/password supplied
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /user/logoff:
    post:
      description: Logs off current logged in user session. The invalidation of the token is based on the explicit storing of the invalid tokens in REDIS backend cache.
      summary: logoffUser
      tags:
        - user
      operationId: UserLogoffPost
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
        - name: body
          in: body
          required: true
          description: User logoff payload
          schema:
            $ref: '#/definitions/RequestSetUserLogoff'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetOk'
          headers: {}
        400:
          description: Invalid username supplied
          schema:
            $ref: '#/definitions/ResultSetError'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /account:
    post:
      description: "A new mapping is created in W like Working status. Attempts to create item in any other status will be errored out. \n\nRequires:\n- Booker role."
      summary: createAccount
      tags:
        - account
      operationId: AccountPost
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
        - name: body
          in: body
          required: true
          description: Creation of object Account
          schema:
            $ref: '#/definitions/RequestSetAccount'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetAccount'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    delete:
      description: >-
        Unselective purge of the table. Used before bulk load.


        Requires:

        - Admin role.
      summary: deleteAccountsAll
      tags:
        - account
      operationId: AccountDelete
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetCount'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /account/{status}/{release}:
    get:
      description: A set of accouts is read and returned. The criteria is per status and version. The varsion must be known a priori. For work version release is always 0.
      summary: readAccountByStatusRelease
      tags:
        - account
      operationId: AccountByStatusAndReleaseGet
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
        - name: status
          in: path
          required: true
          enum:
            - W
            - C
            - P
          type: string
          description: status of the package, W for workm P for production
        - name: release
          in: path
          required: true
          enum:
            - 0
            - last
          type: string
          description: release sequential number, 0 for work, else production
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetAccounts'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /account/{status}/{release}/{bscsAccount}:
    put:
      description: "Most selective access to single row. The primary key is used. One record is returnd. The status and release must be given a priori. Promotion from status value W like Working to C like Controlled may be done only with Controll role.\n\nRequires:\n  \n- Booker role while in W like Work,\n  \n- Control role while in C like Control state and in transition from W like Work to C like Control."
      summary: updateAccount
      tags:
        - account
      operationId: AccountBscsAccountByStatusAndReleasePut
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
        - name: status
          in: path
          required: true
          enum:
            - W
            - C
            - P
          type: string
          description: status of the package, W for workm P for production
        - name: release
          in: path
          required: true
          enum:
            - 0
            - last
          type: string
          description: release sequential number, 0 for work, else production or last for latst version
        - name: bscsAccount
          in: path
          required: true
          type: string
          description: BSCS account code
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetAccounts'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    delete:
      description: "Most selective access to single row. The primary key is used. One record is returnd. The status and release must be given a priori. Only records in W like Working status may be manipulatd this way. Only records in W like Working status may be manipulatd this way. \n\nRequires:\n- Booker role."
      summary: deleteAccount
      tags:
        - account
      operationId: AccountBscsAccountByStatusAndReleaseDelete
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
        - name: status
          in: path
          required: true
          enum:
            - W
            - C
            - P
          type: string
          description: status of the package, W for work P for production
        - name: release
          in: path
          required: true
          enum:
            - 0
            - last
          type: string
          description: release sequential number, 0 for work, else production or last
        - name: bscsAccount
          in: path
          required: true
          type: string
          description: BSCS account number
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetCount'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /account/release:
    post:
      description: "Does a release of version in state C like Controlled to P like Production. The impact is on Account and Order entries. Existence of not controled entries with status W like Working causes failure. Other validation rules are applied as well, for example valid date check: it must be rounded down and in the future and no clash with entries in status P like Production found in Account or Order backednd tables. \n\nRequires:\n- Control role."
      summary: doRelease
      tags:
        - account
      operationId: AccountReleasePost
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetOk'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /order:
    post:
      description: >-
        A new mapping is created in working status, unconfirmed. The entries segment value must be validated with values from dictionary Segment.


        Requires:

        - Control role.
      summary: createOrder
      tags:
        - order
      operationId: OrderPost
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
        - name: body
          in: body
          required: true
          description: Creation of object Order
          schema:
            $ref: '#/definitions/RequestSetOrder'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetOrder'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    delete:
      description: "Unselective purge of the table. Used in bulk load. \n\nRequires:\n- Admin role."
      summary: deleteOrdersAll
      tags:
        - order
      operationId: OrderDelete
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetCount'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /order/{status}/{release}:
    get:
      description: Set of orders is read and returned. The criteria is per status and version. The varsion must be known a priori. For work version release is always 0.
      summary: readOrderByStatusRelease
      tags:
        - order
      operationId: OrderByStatusAndReleaseGet
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
        - name: status
          in: path
          required: true
          enum:
            - W
            - C
            - P
          type: string
          description: status of the package, W for workm P for production
        - name: release
          in: path
          required: true
          enum:
            - 0
            - last
          type: string
          description: release sequential number, 0 for work, else production
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetOrders'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /order/{status}/{release}/{bscsAccount}/{segment}:
    put:
      description: Most selective access to single row. The primary key is used. One record is returnd. The status and release must be given a priori. Only records in W like Working status may be manipulatd this way.
      summary: updateOrder
      tags:
        - order
      operationId: OrderBscsAccountSegmentByStatusAndReleasePut
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
        - name: status
          in: path
          required: true
          enum:
            - W
            - C
            - P
          type: string
          description: status of the package, W for workm P for production
        - name: release
          in: path
          required: true
          enum:
            - 0
            - last
          type: string
          description: release sequential number, 0 for work, else production
        - name: bscsAccount
          in: path
          required: true
          type: string
          description: release sequential number, 0 for work, else production
        - name: segment
          in: path
          required: true
          type: string
          description: customer segment code
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetOrders'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    delete:
      description: "Most selective access to single row. The primary key is used. One record is deleted. Only records in W like Working status may be manipulatd this way. \n\nRequires:\n- Control role."
      summary: deleteOrder
      tags:
        - order
      operationId: OrderBscsAccountSegmentByStatusAndReleaseDelete
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
        - name: status
          in: path
          required: true
          enum:
            - W
            - C
            - P
          type: string
          description: status of the package, W for workm P for production
        - name: release
          in: path
          required: true
          enum:
            - 0
            - last
          type: string
          description: release sequential number, 0 for work, else production
        - name: bscsAccount
          in: path
          required: true
          type: string
          description: release sequential number, 0 for work, else production
        - name: segment
          in: path
          required: true
          type: string
          description: customer segment code
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetCount'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /dictionary/account/bscs:
    post:
      description: Only one description is created in the configuration. Requires Admin role.
      summary: createAccountDictBscs
      tags:
        - dictionary-account-bscs
      operationId: DictionaryAccountBscsPost
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          description: Structure of the objects to be create with all fields to be populated
          schema:
            $ref: '#/definitions/RequestSetAccountDictBscs'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetAccountDictBscs'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    get:
      description: The whole configuration is read from the backend.
      summary: readAccountDictBscs
      tags:
        - dictionary-account-bscs
      operationId: DictionaryAccountBscsGet
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetAccountDictBscss'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    delete:
      description: >-
        Unselective cleanup of the configuration. Used in bulk load.


        Requires:

        - Admin role.
      summary: deleteAccountDictBscs
      tags:
        - dictionary-account-bscs
      operationId: DictionaryAccountBscsDelete
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetCount'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /dictionary/account/sap:
    post:
      description: "Only one description is created in the configuration. \n\nRequires:\n- Admin role."
      summary: createAccountDictSap
      tags:
        - dictionary-account-sap
      operationId: DictionaryAccountSapPost
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
        - name: body
          in: body
          required: true
          description: Structure of the objects to be create with all fields to be populated
          schema:
            $ref: '#/definitions/RequestSetAccountDictSap'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetAccountDictSap'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    get:
      description: The whole configuration is read from the backend.
      summary: readAccountDictSap
      tags:
        - dictionary-account-sap
      operationId: DictionaryAccountSapGet
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetAccountDictSaps'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    delete:
      description: >-
        Unselective cleanup of the configuration. Used in bulk load.


        Requires:

        - Admin role.
      summary: deleteAccountDictSap
      tags:
        - dictionary-account-sap
      operationId: DictionaryAccountSapDelete
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetCount'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
  /dictionary/segment:
    post:
      description: "Only one segment is created in the configuration. \n\nRequires:\n- Admin role"
      summary: createSegment
      tags:
        - dictionary-segment
      operationId: DictionarySegmentPost
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
        - name: body
          in: body
          required: true
          description: Structure of the objects to be create with all fields to be populated.
          schema:
            $ref: '#/definitions/RequestSetSegment'
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetSegment'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    get:
      description: The whole configuration is read from the backend.
      summary: readSegment
      tags:
        - dictionary-segment
      operationId: DictionarySegmentGet
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetSegments'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
    delete:
      description: >-
        Unselective cleanup of the configuration.


        Requires:

        - Admin role.
      summary: deleteSegment
      tags:
        - dictionary-segment
      operationId: DictionarySegmentDelete
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: X-Request-ID
          in: header
          required: false
          type: string
          format: uuid
          description: ''
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/ResultSetCount'
          headers: {}
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/ResultSetError'
        default:
          description: Server error
          schema:
            $ref: '#/definitions/ResultSetError'
definitions:
  RequestSetSegment:
    title: RequestSetSegment
    type: object
    properties:
      data:
        $ref: '#/definitions/Segment'
  Account:
    title: Account
    example:
      releaseId: 0
      status: W
      bscsAccount: BSCSACCOUNT
      ofiSapAccount: OFISAPACCOUNT
      validFromDate: 2017-07-21
      vatCodeInd: VATCODEIND
      sapSegmText: SAPSEGMTEXT
      ofiSapWbsCode: OFISAPWBSCODE
      citMarkerVatFlag: 0
    type: object
    properties:
      releaseId:
        type: integer
        format: int32
      status:
        type: string
      bscsAccount:
        type: string
      ofiSapAccount:
        type: string
      validFromDate:
        type: string
        format: date
      vatCodeInd:
        type: string
      sapSegmText:
        type: string
      ofiSapWbsCode:
        type: string
      citMarkerVatFlag:
        type: integer
        format: int32
  Order:
    title: Order
    example:
      releaseId: 0
      status: W
      bscsAccount: BSCSACCOUNT
      segmentCode: XXX
      orderNumber: 123
      validFromDate: 2017-07-21
    type: object
    properties:
      releaseId:
        type: integer
        format: int32
      status:
        type: string
      bscsAccount:
        type: string
      segmentCode:
        type: string
      orderNumber:
        type: string
      validFromDate:
        type: string
        format: date
  ResultSetUserLogin:
    title: ResultSetUserLogin
    type: object
    properties:
      data:
        $ref: '#/definitions/UserLoginInfo'
  RequestSetAccountDictBscs:
    title: RequestSetAccountDictBscs
    type: object
    properties:
      data:
        $ref: '#/definitions/AccountDictBscs'
  RequestSetAccount:
    title: RequestSetAccount
    type: object
    properties:
      data:
        $ref: '#/definitions/Account'
  ResultSetAccount:
    title: ResultSetAccount
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      data:
        $ref: '#/definitions/Account'
  UserLogoff:
    title: UserLogoff
    type: object
    properties:
      user:
        type: string
  ResultSetOrder:
    title: ResultSetOrder
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      data:
        $ref: '#/definitions/Order'
  Segment:
    title: Segment
    type: object
    properties:
      csTradeRef:
        type: string
      csType:
        type: integer
        format: int32
  ResultSetCount:
    title: ResultSetCount
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      count:
        type: integer
        format: int32
  RequestSetAccountDictSap:
    title: RequestSetAccountDictSap
    type: object
    properties:
      data:
        $ref: '#/definitions/AccountDictSap'
  ResultSetStatus:
    title: ResultSetStatus
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      memoryAlloc:
        type: integer
        format: int32
      memoryTotalAlloc:
        type: integer
        format: int32
      memorySys:
        type: integer
        format: int32
      memoryNMalloc:
        type: integer
        format: int32
      memoryNFree:
        type: integer
        format: int32
      processedRequests:
        type: integer
        format: int32
      processedRequestsErrors:
        type: integer
        format: int32
      processedRequestsOk:
        type: integer
        format: int32
      processingTimeTotalSec:
        type: number
        format: double
      runningSince:
        type: string
  ResultSetAccountDictSap:
    title: ResultSetAccountDictSap
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      data:
        $ref: '#/definitions/AccountDictSap'
  ResultSetVersion:
    title: ResultSetVersion
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      version:
        type: string
  ResultSetOk:
    title: ResultSetOk
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
  ResultSetSegment:
    title: ResultSetSegment
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      data:
        $ref: '#/definitions/Segment'
  ResultSetAccountDictBscs:
    title: ResultSetAccountDictBscs
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      data:
        $ref: '#/definitions/AccountDictBscs'
  UserLogin:
    title: UserLogin
    example:
      user: NOBODY
      role: Admin
      password: NOBODY
    type: object
    properties:
      user:
        type: string
      role:
        $ref: '#/definitions/Role'
      password:
        type: string
  ResultSetOrders:
    title: ResultSetOrders
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      count:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Order'
  ResultSetAccountDictSaps:
    title: ResultSetAccountDictSaps
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      count:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/AccountDictSap'
  ResultSetAccounts:
    title: ResultSetAccounts
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      count:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Account'
  AccountDictSap:
    title: AccountDictSap
    example:
      sapOfiAccount: SAPOFIACCOUNT
      name: NAME
      status: Ok
    type: object
    properties:
      sapOfiAccount:
        type: string
      name:
        type: string
      status:
        type: string
  AccountDictBscs:
    title: AccountDictBscs
    example:
      glCode: GLCODE
      glDes: GLDES
      glType: GLTYPE
      glActive: Y
    type: object
    properties:
      glCode:
        type: string
      glDes:
        type: string
      glType:
        type: string
      glActive:
        type: string
  ResultSetSegments:
    title: ResultSetSegments
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      count:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Segment'
  RequestSetUserLogoff:
    title: RequestSetUserLogoff
    type: object
    properties:
      data:
        $ref: '#/definitions/UserLogoff'
  RequestSetUserLogin:
    title: RequestSetUserLogin
    type: object
    properties:
      data:
        $ref: '#/definitions/UserLogin'
  RequestSetOrder:
    title: RequestSetOrder
    type: object
    properties:
      data:
        $ref: '#/definitions/Order'
  ResultSetAccountDictBscss:
    title: ResultSetAccountDictBscss
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      count:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/AccountDictBscs'
  ResultSetError:
    title: ResultSetError
    type: object
    properties:
      status:
        $ref: '#/definitions/Status14'
      message:
        type: string
  UserLoginInfo:
    title: UserLoginInfo
    type: object
    properties:
      user:
        type: string
      role:
        $ref: '#/definitions/Role'
      token:
        type: string
  release:
    title: release
    example: 0
    type: string
    enum:
      - 0
      - last
  Role:
    title: Role
    example: Booker
    type: string
    enum:
      - Booker
      - Control
      - Admin
  Status:
    title: Status
    example: Ok
    type: string
    enum:
      - Ok
  Status14:
    title: Status14
    example: Error
    type: string
    enum:
      - Error
  status15:
    title: status15
    example: W
    type: string
    enum:
      - W
      - C
      - P
tags:
  - name: system
    description: Operation returning general info about system
  - name: user
    description: Operations on the user session
  - name: account
    description: Operations on the account mappings from BSCS to SAP
  - name: order
    description: Operations on order numbers per BSCS account
  - name: dictionary-account-bscs
    description: Operations on the dictionary of BSSC GL account numbers available for mapping
  - name: dictionary-account-sap
    description: Operations on the dictionary of SAP OFI account numbers available for mapping
  - name: dictionary-segment
    description: Operations on the dictionary of customer segments
externalDocs:
  url: http://swagger.io
  description: Find out more about Swagger
