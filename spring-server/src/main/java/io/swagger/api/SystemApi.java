/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ResultSetError;
import io.swagger.model.ResultSetStatus;
import io.swagger.model.ResultSetVersion;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-09-06T13:08:35.508Z")

@Api(value = "system", description = "the system API")
public interface SystemApi {

    @ApiOperation(value = "systemStatus", nickname = "systemStatusGet", notes = "Enables health check of the service. Makes debugging and operations easy.", response = ResultSetStatus.class, tags={ "system", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = ResultSetStatus.class),
        @ApiResponse(code = 200, message = "Server error", response = ResultSetError.class) })
    @RequestMapping(value = "/system/status",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<ResultSetStatus> systemStatusGet();


    @ApiOperation(value = "systemVersion", nickname = "systemVersionGet", notes = "Enables health check of the service. Makes system observable. Serves like a ping request showing that system is alive.", response = ResultSetVersion.class, tags={ "system", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation", response = ResultSetVersion.class),
        @ApiResponse(code = 200, message = "Server error", response = ResultSetError.class) })
    @RequestMapping(value = "/system/version",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<ResultSetVersion> systemVersionGet();

}
